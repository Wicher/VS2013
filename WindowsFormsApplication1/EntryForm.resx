<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>